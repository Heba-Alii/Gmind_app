// Generated by view binder compiler. Do not edit!
package com.gmind.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gmind.app.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDescriptionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final Guideline bottomGuideline;

  @NonNull
  public final TextView descriptionContent;

  @NonNull
  public final ScrollView descriptionContentBox;

  @NonNull
  public final TextView descriptionText;

  @NonNull
  public final ImageView favIcon;

  @NonNull
  public final Guideline leftGuideline;

  @NonNull
  public final ImageButton playButton;

  @NonNull
  public final ShapeableImageView posterBackgroundContainer;

  @NonNull
  public final ImageView posterImage;

  @NonNull
  public final Guideline posterLeftGuideline;

  @NonNull
  public final Guideline posterRightGuideline;

  @NonNull
  public final Guideline rightGuideline;

  @NonNull
  public final Guideline topGuideline;

  private ActivityDescriptionBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backArrow, @NonNull Guideline bottomGuideline,
      @NonNull TextView descriptionContent, @NonNull ScrollView descriptionContentBox,
      @NonNull TextView descriptionText, @NonNull ImageView favIcon,
      @NonNull Guideline leftGuideline, @NonNull ImageButton playButton,
      @NonNull ShapeableImageView posterBackgroundContainer, @NonNull ImageView posterImage,
      @NonNull Guideline posterLeftGuideline, @NonNull Guideline posterRightGuideline,
      @NonNull Guideline rightGuideline, @NonNull Guideline topGuideline) {
    this.rootView = rootView;
    this.backArrow = backArrow;
    this.bottomGuideline = bottomGuideline;
    this.descriptionContent = descriptionContent;
    this.descriptionContentBox = descriptionContentBox;
    this.descriptionText = descriptionText;
    this.favIcon = favIcon;
    this.leftGuideline = leftGuideline;
    this.playButton = playButton;
    this.posterBackgroundContainer = posterBackgroundContainer;
    this.posterImage = posterImage;
    this.posterLeftGuideline = posterLeftGuideline;
    this.posterRightGuideline = posterRightGuideline;
    this.rightGuideline = rightGuideline;
    this.topGuideline = topGuideline;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDescriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDescriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_description, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDescriptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backArrow;
      ImageView backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.bottomGuideline;
      Guideline bottomGuideline = ViewBindings.findChildViewById(rootView, id);
      if (bottomGuideline == null) {
        break missingId;
      }

      id = R.id.descriptionContent;
      TextView descriptionContent = ViewBindings.findChildViewById(rootView, id);
      if (descriptionContent == null) {
        break missingId;
      }

      id = R.id.descriptionContentBox;
      ScrollView descriptionContentBox = ViewBindings.findChildViewById(rootView, id);
      if (descriptionContentBox == null) {
        break missingId;
      }

      id = R.id.descriptionText;
      TextView descriptionText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionText == null) {
        break missingId;
      }

      id = R.id.favIcon;
      ImageView favIcon = ViewBindings.findChildViewById(rootView, id);
      if (favIcon == null) {
        break missingId;
      }

      id = R.id.leftGuideline;
      Guideline leftGuideline = ViewBindings.findChildViewById(rootView, id);
      if (leftGuideline == null) {
        break missingId;
      }

      id = R.id.playButton;
      ImageButton playButton = ViewBindings.findChildViewById(rootView, id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.posterBackgroundContainer;
      ShapeableImageView posterBackgroundContainer = ViewBindings.findChildViewById(rootView, id);
      if (posterBackgroundContainer == null) {
        break missingId;
      }

      id = R.id.posterImage;
      ImageView posterImage = ViewBindings.findChildViewById(rootView, id);
      if (posterImage == null) {
        break missingId;
      }

      id = R.id.posterLeftGuideline;
      Guideline posterLeftGuideline = ViewBindings.findChildViewById(rootView, id);
      if (posterLeftGuideline == null) {
        break missingId;
      }

      id = R.id.posterRightGuideline;
      Guideline posterRightGuideline = ViewBindings.findChildViewById(rootView, id);
      if (posterRightGuideline == null) {
        break missingId;
      }

      id = R.id.rightGuideline;
      Guideline rightGuideline = ViewBindings.findChildViewById(rootView, id);
      if (rightGuideline == null) {
        break missingId;
      }

      id = R.id.topGuideline;
      Guideline topGuideline = ViewBindings.findChildViewById(rootView, id);
      if (topGuideline == null) {
        break missingId;
      }

      return new ActivityDescriptionBinding((ConstraintLayout) rootView, backArrow, bottomGuideline,
          descriptionContent, descriptionContentBox, descriptionText, favIcon, leftGuideline,
          playButton, posterBackgroundContainer, posterImage, posterLeftGuideline,
          posterRightGuideline, rightGuideline, topGuideline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
